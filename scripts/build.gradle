plugins {
	id("org.openapi.generator") version "7.0.0"
}

task generateSymfonyBundle(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
	group "OpenAPI Tools"
	description "Generate the Symfony bundle from the OpenApi specification file"
	generatorName = "php-symfony"
	outputDir = "$rootDir/generated/php-server-bundle"
	inputSpec = "$rootDir/openapi.yaml"
	gitUserId = "zero-waste-paris"
	gitRepoId = "membership-scipts"

	generateModelTests = false
	generateModelDocumentation = false
	generateApiTests = false
	generateApiDocumentation = false
}

task generateAngularApiModule(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
	group "OpenAPI Tools"
	description "Generate the API Angular bundle from the OpenApi specification file"
	generatorName = "typescript-angular"
	outputDir = "$rootDir/angular-front/src/app/generated/api"
	inputSpec = "$rootDir/openapi.yaml"
}

task generateAngularLoginModule(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
	group "OpenAPI Tools"
	description "Generate the API Angular login bundle from the OpenApi specification file"
	generatorName = "typescript-angular"
	outputDir = "$rootDir/angular-front/src/app/generated/login"
	inputSpec = "$rootDir/openapi-login.yaml"
	additionalProperties = [
		apiModulePrefix: "Login",
		serviceSuffix: "LoginService"
	]
}

task generateSources(dependsOn: ['generateSymfonyBundle', 'generateAngularApiModule', 'generateAngularLoginModule']) {
	group "OpenAPI Tools"
	description "Generate all sources"
}
