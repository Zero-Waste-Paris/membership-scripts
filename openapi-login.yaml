openapi: 3.0.3
info:
  title: ZWP Dashboard - Login
  version: 0.0.1
paths:
  /login:
    post:
      summary: logs the user in
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
       "200":
         description: The user successfully logged in
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/LoginResult'
       "401":
         description: User failed to logged in (probably bad credentials)
    get:
      summary: Returns the name of the user if he or she is logged in
      responses:
       "200":
         description: OK - the user is logged in
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/LoginResult'
       "401":
         description: user is not logged in
  /submit-totp:
    post:
      summary: "submit a totp code, for a user that has already validated his or her credentials"
      requestBody:
        content:
          application/json:
            schema:
              # should match the schema in the Symfony app security.yaml: auth_code_parameter_name
              type: object
              required:
                - _auth_code
              properties:
                _auth_code:
                  type: string
      responses:
        "200":
          description: The user successfully validated the TOTP code
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/User'
        "401":
          description: The totp validation failed
  /logout:
    post:
      summary: destroys the session server-side
      responses:
        "200":
          description: OK
          content:
            text/html:
              schema:
                type: string

components:
  schemas:
    LoginResult:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum: [failureCredentials, missing2FA, failure2FA, success]
        login: # the login of the user, if the login succeeded
          type: string
